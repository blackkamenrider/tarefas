{"version":3,"sources":["timeInput.ts"],"names":["mask","value","replace","totalCharactersInValue","length","substr","validate","regex","RegExp","test"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAIC,KAAD,IAA2B;AAC7C;AACAA,EAAAA,KAAK,GAAGA,KAAK,CAACC,OAAN,CAAc,aAAd,EAA6B,EAA7B,CAAR;AAEA,MAAIC,sBAAsB,GAAGF,KAAK,CAACG,MAAnC;;AAEA,MAAID,sBAAsB,KAAK,CAA/B,EAAkC;AAChC,WAAOF,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgB,CAAhB,IAAqB,GAArB,GAA2BJ,KAAK,CAACI,MAAN,CAAa,CAAb,CAAlC;AACD;;AAED,MAAIF,sBAAsB,KAAK,CAA/B,EAAkC;AAChC,WAAOF,KAAK,CAACI,MAAN,CAAa,CAAb,EAAgB,CAAhB,IAAqB,GAArB,GAA2BJ,KAAK,CAACI,MAAN,CAAa,CAAb,CAAlC;AACD;;AAED,SAAOJ,KAAP;AACD,CAfM;AAiBP,OAAO,MAAMK,QAAQ,GAAIL,KAAD,IAA4B;AAClD,MAAIM,KAAK,GAAG,IAAIC,MAAJ,CAAW,+BAAX,CAAZ;AACA,SAAOP,KAAK,CAACG,MAAN,GAAeG,KAAK,CAACE,IAAN,CAAWR,KAAX,CAAf,GAAmC,IAA1C;AACD,CAHM","sourcesContent":["export const mask = (value: string): string => {\n  // replace non-numeric characters\n  value = value.replace(/:|[a-zA-Z]/g, '');\n\n  let totalCharactersInValue = value.length;\n\n  if (totalCharactersInValue === 3) {\n    return value.substr(0, 1) + ':' + value.substr(1);\n  }\n\n  if (totalCharactersInValue === 4) {\n    return value.substr(0, 2) + ':' + value.substr(2);\n  }\n\n  return value;\n};\n\nexport const validate = (value: string): boolean => {\n  let regex = new RegExp('^(0?[1-9]|1[012]):[0-5][0-9]$');\n  return value.length ? regex.test(value) : true;\n};\n"]}