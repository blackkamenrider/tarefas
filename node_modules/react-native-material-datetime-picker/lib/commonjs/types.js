"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AndroidTimeInputMode = exports.AndroidPickerMode = exports.AndroidDatePickerType = exports.AndroidDateInputMode = exports.ActionType = void 0;
let AndroidPickerMode;
exports.AndroidPickerMode = AndroidPickerMode;

(function (AndroidPickerMode) {
  AndroidPickerMode["DATE"] = "date";
  AndroidPickerMode["TIME"] = "time";
})(AndroidPickerMode || (exports.AndroidPickerMode = AndroidPickerMode = {}));

let AndroidTimeInputMode;
exports.AndroidTimeInputMode = AndroidTimeInputMode;

(function (AndroidTimeInputMode) {
  AndroidTimeInputMode["DEFAULT"] = "default";
  AndroidTimeInputMode["KEYBOARD"] = "keyboard";
  AndroidTimeInputMode["CLOCK"] = "clock";
})(AndroidTimeInputMode || (exports.AndroidTimeInputMode = AndroidTimeInputMode = {}));

let AndroidDateInputMode;
exports.AndroidDateInputMode = AndroidDateInputMode;

(function (AndroidDateInputMode) {
  AndroidDateInputMode["DEFAULT"] = "default";
  AndroidDateInputMode["TEXT"] = "text";
  AndroidDateInputMode["CALENDAR"] = "calendar";
})(AndroidDateInputMode || (exports.AndroidDateInputMode = AndroidDateInputMode = {}));

let AndroidDatePickerType;
exports.AndroidDatePickerType = AndroidDatePickerType;

(function (AndroidDatePickerType) {
  AndroidDatePickerType["DEFAULT"] = "default";
  AndroidDatePickerType["RANGE"] = "range";
})(AndroidDatePickerType || (exports.AndroidDatePickerType = AndroidDatePickerType = {}));

let ActionType;
exports.ActionType = ActionType;

(function (ActionType) {
  ActionType[ActionType["SET_DATE"] = 0] = "SET_DATE";
  ActionType[ActionType["SET_DATE_RANGE"] = 1] = "SET_DATE_RANGE";
  ActionType[ActionType["SET_TIME"] = 2] = "SET_TIME";
  ActionType[ActionType["DISMISSED"] = 3] = "DISMISSED";
})(ActionType || (exports.ActionType = ActionType = {}));
//# sourceMappingURL=types.js.map