{"version":3,"names":["show","props","mode","AndroidPickerMode","DATE","value","onConfirm","onConfirmDateRange","onError","picker","getPicker","action","day","month","year","startDay","startMonth","startYear","endDay","endMonth","endYear","minute","hour","ActionType","SET_DATE","date","Date","setFullYear","SET_DATE_RANGE","startDate","endDate","SET_TIME","time","setHours","DISMISSED","err","dismiss","pickers","MaterialDatetimePickerAndroid"],"sources":["MaterialDatetimePickerAndroid.android.ts"],"sourcesContent":["import pickers from '../picker';\nimport { ActionType, AndroidPickerMode, AndroidPickerProps } from '../types';\nimport { getPicker } from './android';\n\nconst show = (props: AndroidPickerProps) => {\n  const {\n    mode = AndroidPickerMode.DATE,\n    value,\n    onConfirm,\n    onConfirmDateRange,\n    onError,\n  } = props;\n  const picker = getPicker(mode);\n\n  (async () => {\n    try {\n      const {\n        action,\n        day,\n        month,\n        year,\n        startDay,\n        startMonth,\n        startYear,\n        endDay,\n        endMonth,\n        endYear,\n        minute,\n        hour,\n      } = await picker(props);\n      switch (action) {\n        case ActionType.SET_DATE: {\n          const date = new Date(value);\n          date.setFullYear(year, month, day);\n          onConfirm?.(date);\n          break;\n        }\n        case ActionType.SET_DATE_RANGE: {\n          const startDate = new Date(value);\n          const endDate = new Date(value);\n          startDate.setFullYear(startYear, startMonth, startDay);\n          endDate.setFullYear(endYear, endMonth, endDay);\n          onConfirmDateRange?.(startDate, endDate);\n          break;\n        }\n        case ActionType.SET_TIME: {\n          const time = new Date(value);\n          time.setHours(hour, minute);\n          onConfirm?.(time);\n          break;\n        }\n        case ActionType.DISMISSED:\n        default: {\n          onConfirm?.(new Date(value));\n        }\n      }\n    } catch (err) {\n      onError?.(err);\n    }\n  })();\n};\n\nconst dismiss = (mode?: AndroidPickerMode): Promise<boolean> => {\n  if (mode) {\n    return pickers[mode].dismiss();\n  }\n  return pickers.date.dismiss() || pickers.time.dismiss();\n};\n\nexport const MaterialDatetimePickerAndroid = { show, dismiss };\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,IAAI,GAAIC,KAAD,IAA+B;EAC1C,MAAM;IACJC,IAAI,GAAGC,wBAAA,CAAkBC,IADrB;IAEJC,KAFI;IAGJC,SAHI;IAIJC,kBAJI;IAKJC;EALI,IAMFP,KANJ;EAOA,MAAMQ,MAAM,GAAG,IAAAC,kBAAA,EAAUR,IAAV,CAAf;;EAEA,CAAC,YAAY;IACX,IAAI;MACF,MAAM;QACJS,MADI;QAEJC,GAFI;QAGJC,KAHI;QAIJC,IAJI;QAKJC,QALI;QAMJC,UANI;QAOJC,SAPI;QAQJC,MARI;QASJC,QATI;QAUJC,OAVI;QAWJC,MAXI;QAYJC;MAZI,IAaF,MAAMb,MAAM,CAACR,KAAD,CAbhB;;MAcA,QAAQU,MAAR;QACE,KAAKY,iBAAA,CAAWC,QAAhB;UAA0B;YACxB,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASrB,KAAT,CAAb;YACAoB,IAAI,CAACE,WAAL,CAAiBb,IAAjB,EAAuBD,KAAvB,EAA8BD,GAA9B;YACAN,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAGmB,IAAH,CAAT;YACA;UACD;;QACD,KAAKF,iBAAA,CAAWK,cAAhB;UAAgC;YAC9B,MAAMC,SAAS,GAAG,IAAIH,IAAJ,CAASrB,KAAT,CAAlB;YACA,MAAMyB,OAAO,GAAG,IAAIJ,IAAJ,CAASrB,KAAT,CAAhB;YACAwB,SAAS,CAACF,WAAV,CAAsBV,SAAtB,EAAiCD,UAAjC,EAA6CD,QAA7C;YACAe,OAAO,CAACH,WAAR,CAAoBP,OAApB,EAA6BD,QAA7B,EAAuCD,MAAvC;YACAX,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,YAAAA,kBAAkB,CAAGsB,SAAH,EAAcC,OAAd,CAAlB;YACA;UACD;;QACD,KAAKP,iBAAA,CAAWQ,QAAhB;UAA0B;YACxB,MAAMC,IAAI,GAAG,IAAIN,IAAJ,CAASrB,KAAT,CAAb;YACA2B,IAAI,CAACC,QAAL,CAAcX,IAAd,EAAoBD,MAApB;YACAf,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAG0B,IAAH,CAAT;YACA;UACD;;QACD,KAAKT,iBAAA,CAAWW,SAAhB;QACA;UAAS;YACP5B,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAG,IAAIoB,IAAJ,CAASrB,KAAT,CAAH,CAAT;UACD;MAxBH;IA0BD,CAzCD,CAyCE,OAAO8B,GAAP,EAAY;MACZ3B,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAG2B,GAAH,CAAP;IACD;EACF,CA7CD;AA8CD,CAxDD;;AA0DA,MAAMC,OAAO,GAAIlC,IAAD,IAAgD;EAC9D,IAAIA,IAAJ,EAAU;IACR,OAAOmC,eAAA,CAAQnC,IAAR,EAAckC,OAAd,EAAP;EACD;;EACD,OAAOC,eAAA,CAAQZ,IAAR,CAAaW,OAAb,MAA0BC,eAAA,CAAQL,IAAR,CAAaI,OAAb,EAAjC;AACD,CALD;;AAOO,MAAME,6BAA6B,GAAG;EAAEtC,IAAF;EAAQoC;AAAR,CAAtC"}