"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactNative = require("react-native");

var _constants = require("./utils/constants");

const RNMaterialDatePicker = _reactNative.NativeModules.RNMaterialTimePicker ? _reactNative.NativeModules.RNMaterialDatePicker : new Proxy({}, {
  get() {
    throw new Error(_constants.LINKING_ERROR);
  }

});

class DatePicker {
  /**
   * Shows the Android Material Design time picker dialog.
   */
  static async show(options) {
    var _options$minimumDate, _options$maximumDate, _options$startDate, _options$endDate;

    return RNMaterialDatePicker.show({ ...options,
      value: options.value.getTime(),
      minimumDate: (_options$minimumDate = options.minimumDate) === null || _options$minimumDate === void 0 ? void 0 : _options$minimumDate.getTime(),
      maximumDate: (_options$maximumDate = options.maximumDate) === null || _options$maximumDate === void 0 ? void 0 : _options$maximumDate.getTime(),
      startDate: (_options$startDate = options.startDate) === null || _options$startDate === void 0 ? void 0 : _options$startDate.getTime(),
      endDate: (_options$endDate = options.endDate) === null || _options$endDate === void 0 ? void 0 : _options$endDate.getTime()
    });
  }

  static async dismiss() {
    return RNMaterialDatePicker.dismiss();
  }

}

exports.default = DatePicker;
//# sourceMappingURL=datepicker.android.js.map